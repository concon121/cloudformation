---
AWSTemplateFormatVersion: 2010-09-09
Description: 'Development stack for the Small Apps Domain'

Parameters:
  ProjectName:
    Description: The name of the project
    Type: String
  IndexDocument:
    Description: The index document for static S3 websites
    Type: String
    Default: index.html

Mappings:
<%= partial('mappings/region-map.yaml.erb', {}, indent: 2) %>


Resources:

  # ---------------------------------------------------------------------------
  # IAM Security Role for the pipeline to assume
  # ---------------------------------------------------------------------------

  <%
    appBucket = @appBucketName + "dev"
    stagingBucket = @stagingBucket + "dev"
    codebuildsArry = [
      "ApplicationUploadBuild"
    ]
    s3Arry = {
      'names' => [@appBucketName + "dev"],
      'arns' => ['DevelopmentPipelineStagingBucket']
    }
    codecommits = []
    @projects.each do |project|
      codecommits.push(project['id'] + 'Repo.Name')
    end
    pipelineRoleId = 'PipelineRole'
    pipelineId = 'DevelopmentPipeline'
    buildId = 'ApplicationUploadBuild'
    stagingBucketId = pipelineId + 'StagingBucket'
  %>

<%= partial('iam/pipeline-assumed-role.yaml.erb',
            id: pipelineRoleId,
            codebuilds: codebuildsArry,
            s3s: s3Arry,
            codecommits: codecommits) %>

  # --------------------------------------------------------------------------
  # CodeCommit Repository
  # --------------------------------------------------------------------------
<% @projects.each do |project| %>
<%= partial('codecommit/repository.yaml.erb',
            id: project['id'] + 'Repo',
            name: project['name'],
            description: "!Join [' ' , ['Git repository for:', #{project['name']}]]") %>
<% end %>
  # ---------------------------------------------------------------------------
  # CodeBuild configuration
  # ---------------------------------------------------------------------------

<%= partial('codebuild/s3-upload.yaml.erb',
            id: buildId,
            buildSpec: 'codebuild/buildspecs/static-website.yaml.erb',
            environmentVars: 'codebuild/environmentVars/static-website.yaml.erb',
            stagingBucket: stagingBucketId,
            appBucket: appBucket,
            role: pipelineRoleId,
            cloudfront: false) %>

  # ---------------------------------------------------------------------------
  # Pipeline definition
  # ---------------------------------------------------------------------------

<%= partial('s3/versioned-bucket.yaml.erb',
            id: stagingBucketId,
            name: stagingBucket) %>

<%= partial('codepipeline/s3-static-website-pipeline.yaml.erb',
            id: pipelineId,
            role: pipelineRoleId,
            buildName: buildId,
            testing: false,
            branch: 'develop',
            autotrigger: true,
            stagingBucket: stagingBucketId) %>

  # ---------------------------------------------------------------------------
  # Additional Access Policies
  # ---------------------------------------------------------------------------

<%= partial('iam/policies/codecommit.yaml.erb',
            id: 'CodeCommitAccessPolicy',
            codecommits: codecommits) %>

<%= partial('iam/policies/codebuild.yaml.erb',
            id: 'CodeBuildAccessPolicy',
            codebuilds: codebuildsArry) %>

<%= partial('iam/policies/codepipeline.yaml.erb',
            id: 'CodePipelineAccessPolicy',
            pipelines: [pipelineId]) %>

  # --------------------------------------------------------------------------
  # Outputs
  # --------------------------------------------------------------------------

Outputs:
  CodeCommitPolicy:
    Description: The policy which allows access to CodeCommit
    Value:
      Ref: 'CodeCommitAccessPolicy'
  CodeBuildPolicy:
    Description: The policy which allows access to CodeBuild
    Value:
      Ref: 'CodeBuildAccessPolicy'
  CodePipelinePolicy:
    Description: The policy which allows access to CodePipeline
    Value:
      Ref: 'CodePipelineAccessPolicy'
<% @projects.each do |project| %>
  <%= project['id'] %>GitRepo:
    Description: The name of the Git repository
    Value: !GetAtt [<%= project['id'] %>Repo, Name]
  <%= project['id'] %>GitRepoCloneUrlHttp:
    Description: The URL to clone the Git repository via HTTP
    Value: !GetAtt [<%= project['id'] %>Repo, CloneUrlHttp]
  <%= project['id'] %>GitRepoCloneUrlSsh:
    Description: The URL to clone the Git repository via SSH
    Value: !GetAtt [<%= project['id'] %>Repo, CloneUrlSsh]
<% end %>
