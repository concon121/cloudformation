        BuildSpec:
          "version: 0.2\n\nphases:\n  build:\n    commands:\n      - sudo apt-get update -y\
          \n      - sudo apt-get install libfile-mimeinfo-perl zip unzip jq -y\
          \n      - for file in `ls .`; do if [ -d $file ]; then export PROJECT_NAME=${file}; echo $PROJECT_NAME; break; fi; done\
          \n      - commit=`aws codecommit get-branch --repository-name ${PROJECT_NAME} --branch-name <%= @branch %> | jq -r .branch.commitId`
          \n      - echo $commit
          \n      - if [ ! -z `aws s3api list-objects --bucket $STAGING_BUCKET | jq -r '.Contents[].Key' | grep ${PROJECT_NAME}.lastcommit || :` ]; then aws s3api get-object --bucket $STAGING_BUCKET --key ${PROJECT_NAME}.lastcommit ${PROJECT_NAME}.lastcommit; fi \
          \n      - touch ${PROJECT_NAME}.lastcommit
          \n      - sameCommit=`cat ${PROJECT_NAME}.lastcommit | grep $commit | wc -l`
          \n      - echo $sameCommit
          \n      - if [ $sameCommit -eq 1 ] && [ ! -z `cat ${PROJECT_NAME}.lastcommit` ]; then echo \"Commit ID ${commit} is already deployed.  Exiting without re-deployment.\"; exit 0; else echo $commit > ${PROJECT_NAME}.lastcommit; aws s3 cp ${PROJECT_NAME}.lastcommit s3://${STAGING_BUCKET} --acl public-read --sse AES256; fi
          \n      - 'if [ $sameCommit -ne 1 ]; then aws s3 rm --recursive s3://${S3_BUCKET}/<%= @projectRoot %>/${PROJECT_NAME} || :; fi'\
          \n      - if [ $sameCommit -ne 1 ]; then aws s3 sync --acl public-read --sse AES256  ${PROJECT_NAME} s3://${S3_BUCKET}/<%= @projectRoot %>/${PROJECT_NAME}; fi \
          \n      - if [ $sameCommit -ne 1 ]; then if [ ! -z `aws s3api list-objects --bucket $STAGING_BUCKET | jq -r '.Contents[].Key' | grep $RELEASE_NAME || :` ]; then aws s3api get-object --bucket $STAGING_BUCKET --key $RELEASE_NAME $RELEASE_NAME; fi; fi \
          \n      - if [ $sameCommit -ne 1 ]; then if [ -f ${RELEASE_NAME} ]; then unzip -n $RELEASE_NAME; fi; fi\
<% if @cloudfront && !@cloudfront.nil? %>
          \n      - if [ $sameCommit -ne 1 ]; then aws configure set preview.cloudfront true; fi\
          \n      - if [ $sameCommit -ne 1 ]; then aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_DIST_ID --paths \"/*\"; fi\
<% end %>
          \n      - if [ $sameCommit -ne 1 ]; then mkdir -p <%= @projectRoot %>; mv $PROJECT_NAME <%= @projectRoot %>/; zip -r ${RELEASE_NAME} <%= @projectRoot %>; fi\
          \n      - if [ $sameCommit -ne 1 ]; then aws s3 cp ${RELEASE_NAME} s3://${STAGING_BUCKET} --acl public-read --sse AES256; fi"
