  PipelineRole:
    Type: "AWS::IAM::Role"
    Properties:
      Path: "/"
      RoleName: !Join ['-', [!Ref 'ProjectName', 'Role', '<%= @tag %>']]
      AssumeRolePolicyDocument:
        Version: "2008-10-17"
        Statement:
          - Sid: "1"
            Effect: "Allow"
            Principal:
              Service: "codepipeline.amazonaws.com"
            Action: "sts:AssumeRole"
          - Sid: "2"
            Effect: "Allow"
            Principal:
              Service: "codebuild.amazonaws.com"
            Action: "sts:AssumeRole"
  PipelinePolicy:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: !Join ['-', [!Ref 'ProjectName', 'Policy', '<%= @tag %>']]
      Roles:
        - Ref: PipelineRole
      PolicyDocument:
        Statement:
          - Action:
              - "logs:CreateLogGroup"
              - "logs:CreateLogStream"
              - "logs:PutLogEvents"
            Resource:
              <% @codebuilds.each do |codebuild| -%>
              - !Sub
                - arn:aws:logs:${Region}:${Account}:log-group:/aws/codebuild/${Project}:log-stream:*
                - Region: !Ref 'AWS::Region'
                  Account: !Ref 'AWS::AccountId'
                  Project: <%= codebuild %>
              <% end -%>
            Effect: "Allow"
          - Action:
              - "s3:PutObject"
              - "s3:PutObjectAcl"
              - "s3:GetObject"
              - "s3:GetObjectVersion"
            Resource:
              - !Sub
                - '${Bucket}/*'
                - Bucket: !GetAtt
                  - AppBucket
                  - Arn
              - !Join [':::', ['arn:aws:s3', !Join ['/', [!Ref 'StagingBucketName', '*']]]]
            Effect: "Allow"
          - Action:
              - "codecommit:GitPull"
              - "codecommit:CancelUploadArchive"
              - "codecommit:GetBranch"
              - "codecommit:GetCommit"
              - "codecommit:GetUploadArchiveStatus"
              - "codecommit:UploadArchive"
            Resource: !Sub
              - 'arn:aws:codecommit:${Region}:${Account}:${Project}'
              - Region: !Ref 'AWS::Region'
                Account: !Ref 'AWS::AccountId'
                Project:  !Ref 'CodeCommitProject'
            Effect: "Allow"
          - Action:
              - "kms:GenerateDataKey*"
              - "kms:Encrypt"
              - "kms:Decrypt"
            Resource: !Sub
              - 'arn:aws:kms:${Region}:${Account}:alias/aws/s3'
              - Region: !Ref 'AWS::Region'
                Account: !Ref 'AWS::AccountId'
            Effect: "Allow"
          - Action:
              - "codebuild:StartBuild"
              - "codebuild:BatchGetBuilds"
              - "codebuild:StopBuild"
            Resource: <% @codebuilds.each do |codebuild| -%>
            - !Sub
              - arn:aws:codebuild:${Region}:${Account}:${Project}
              - Region: !Ref 'AWS::Region'
                Account: !Ref 'AWS::AccountId'
                Project: <%= codebuild %>
            <% end -%>
            Effect: "Allow"
          - Action:
              - "cloudfront:CreateInvalidation"
            Resource:
              - '*'
            Effect: 'Allow'

  PipelineDeployRole:
    Type: "AWS::IAM::Role"
    Properties:
      Path: "/"
      RoleName: !Join ['-', [!Ref 'ProjectName', 'Role', '<%= @tag %>', 'deploy']]
      AssumeRolePolicyDocument:
        Version: "2008-10-17"
        Statement:
          - Sid: "1"
            Effect: "Allow"
            Principal:
              Service: "codepipeline.amazonaws.com"
            Action: "sts:AssumeRole"
  PipelineDeployPolicy:
    Type: "AWS::IAM::Policy"
    DependsOn:
      - <%= "#{@pipelineId}" %>
    Properties:
      PolicyName: !Join ['-', [!Ref 'ProjectName', 'Policy', '<%= @tag %>', 'deploy']]
      Roles:
        - Ref: PipelineDeployRole
      PolicyDocument:
        Statement:
          - Action:
              - "codepipeline:GetPipeline"
              - "codepipeline:GetJobDetails"
              - "codepipeline:GetPipelineState"
              - "codepipeline:ListPipelines"
              - "codepipeline:StartPipelineExecution"
              - "codepipeline:PutJobSuccessResult"
              - "codepipeline:PutJobFailureResult"
              - "codepipeline:RetryStageExecution"
            Resource: !Sub
              - arn:aws:codepipeline:${Region}:${Account}:${Pipeline}
              - Region: !Ref 'AWS::Region'
                Account: !Ref 'AWS::AccountId'
                Pipeline: !Join ['-', [!Ref 'ProjectName', 'Pipeline', '<%= @tag %>']]
            Effect: "Allow"
