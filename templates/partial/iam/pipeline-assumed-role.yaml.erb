  PipelineRole:
    Type: "AWS::IAM::Role"
    Properties:
      Path: "/"
      RoleName: !Join ['-', [!Ref 'ProjectName', 'Role', '<%= @tag %>']]
      AssumeRolePolicyDocument:
        Version: "2008-10-17"
        Statement:
          - Sid: "1"
            Effect: "Allow"
            Principal:
              Service: "codepipeline.amazonaws.com"
            Action: "sts:AssumeRole"
          - Sid: "2"
            Effect: "Allow"
            Principal:
              Service: "codebuild.amazonaws.com"
            Action: "sts:AssumeRole"
  PipelinePolicy:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: !Join ['-', [!Ref 'ProjectName', 'Policy', '<%= @tag %>']]
      Roles:
        - Ref: PipelineRole
      PolicyDocument:
        Statement:
          <% if @codebuilds %>
          - Action:
              - "logs:CreateLogGroup"
              - "logs:CreateLogStream"
              - "logs:PutLogEvents"
            Resource: <% @codebuilds.each do |codebuild| %>
              - !Sub
                - arn:aws:logs:${Region}:${Account}:log-group:/aws/codebuild/${Project}:log-stream:*
                - Region: !Ref 'AWS::Region'
                  Account: !Ref 'AWS::AccountId'
                  Project: <%= codebuild %> <% end %>
            Effect: "Allow"
          <% end %>
          <% if @s3s %>
          - Action:
              - "s3:PutObject"
              - "s3:PutObjectAcl"
              - "s3:GetObject"
              - "s3:GetObjectVersion"
            Resource:<% @s3s.each do |s3| %>
              - !Sub
                - '${Bucket}/*'
                - Bucket: !GetAtt
                  - <%= s3 %>
                  - Arn <% end %>
            Effect: "Allow"
          <% end %>
          <% if @codecommits && !@codecommits.nil? %>
          - Action:
              - "codecommit:GitPull"
              - "codecommit:CancelUploadArchive"
              - "codecommit:GetBranch"
              - "codecommit:GetCommit"
              - "codecommit:GetUploadArchiveStatus"
              - "codecommit:UploadArchive"
            Resource: <% @codecommits.each do |codecommit| %>
              - !Sub
                - 'arn:aws:codecommit:${Region}:${Account}:${Project}'
                - Region: !Ref 'AWS::Region'
                  Account: !Ref 'AWS::AccountId'
                  Project:  <%= codecommit %> <% end %>
            Effect: "Allow"
          <% end %>
          - Action:
              - "kms:GenerateDataKey*"
              - "kms:Encrypt"
              - "kms:Decrypt"
            Resource: !Sub
              - 'arn:aws:kms:${Region}:${Account}:alias/aws/s3'
              - Region: !Ref 'AWS::Region'
                Account: !Ref 'AWS::AccountId'
            Effect: "Allow"
          <% if @codebuilds %>
          - Action:
              - "codebuild:StartBuild"
              - "codebuild:BatchGetBuilds"
              - "codebuild:StopBuild"
            Resource: <% @codebuilds.each do |codebuild| %>
            - !Sub
              - arn:aws:codebuild:${Region}:${Account}:project/${Project}
              - Region: !Ref 'AWS::Region'
                Account: !Ref 'AWS::AccountId'
                Project: <%= codebuild %> <% end %>
            Effect: "Allow"
          <% end %>
          - Action:
              - "cloudfront:CreateInvalidation"
            Resource:
              - '*'
            Effect: 'Allow'
